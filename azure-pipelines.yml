trigger:
- none
#- master

resources:
- repo: self

variables:
- group: public-npm
- name: vmImageName
  value: 'ubuntu-latest'
- name: envName
  value: 'bnpm'
- name: version-major
  value: '0'
- name: version-minor
  value: '0'

name: $(version-major).$(version-minor).$(rev:r)

pool:
  vmImage: $(vmImageName)

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: BuildNpm
    displayName: Build NPM
    pool:
      vmImage: $(vmImageName)
      workspace:
        clean: all
    steps:
    - script: |
        echo "build number - $(Build.BuildNumber)"
      displayName: 'print variables'

    - checkout: self
      clean: "true"
      persistCredentials: "true"

    - task: Npm@1
      displayName: 'npm install'
      inputs:
        command: 'install'

    - task: Npm@1
      displayName: 'npm version'
      inputs:
        command: custom
        customCommand: 'version "$(Build.BuildNumber)" --no-git-tag-version'

    - task: "Npm@1"
      displayName: "npm pack"
      inputs:
        command: custom
        customCommand: "pack --pack-destination $(Build.ArtifactStagingDirectory)"

    - publish: $(build.artifactstagingdirectory)
      displayName: publish artifact
      condition: succeededOrFailed()
      artifact: npm

#  - job: GitTag
#    displayName: Add git tag
#    dependsOn: [ BuildNpm ]
#    condition: succeeded()
#    steps:
#    - checkout: self
#      clean: "true"
#      persistCredentials: "true"
#
#    - pwsh: |
#          git config --global user.name "AzureDevOps Agent"
#          git tag "$(Build.BuildNumber)" --force
#          git push origin "$(Build.BuildNumber)" --force
#          Write-Output "Tagging $(Build.Repository.Name) with $(Build.BuildNumber)"
#      displayName:  set git tag

- stage: Production
  displayName: Deploy stage
  dependsOn: Build
  jobs:
  - deployment: Production
    condition: succeeded()
    displayName: Production
    pool:
      vmImage: $(vmImageName)
    environment: $(envName)
    strategy:
      runOnce:
        deploy:
          steps:

          - download: current
            displayName: "download packages"
            artifact: npm

          - task: ExtractFiles@1
            displayName: "unzip packages"
            inputs:
              archiveFilePatterns: "$(Pipeline.Workspace)/npm/bnpm-$(Build.BuildNumber).tgz"
              destinationFolder: "$(Pipeline.Workspace)/npmout/bnpm"
              cleanDestinationFolder: true
              overwriteExistingFiles: true

          - task: npmAuthenticate@0
            inputs:
              workingFile: '$(Pipeline.Workspace)/npmout/'
              customEndpoint: 'npm brandup'

          - task: Npm@1
            displayName: 'publish npm'
            inputs:
              command: publish
              workingDir: '$(Pipeline.Workspace)/npmout/bnpm/package'
              publishEndpoint: '$(publish-npm-credentials)'

#          - task: Npm@1
#            displayName: "publish bnpm"
#            inputs:
#              command: "custom"
#              workingDir: "$(Pipeline.Workspace)/npm"
#              customCommand: "publish bnpm-$(Build.BuildNumber).tgz"
#              customEndpoint: '$(publish-npm-credentials)'